# Dockerfile for Upload Assistant GUI Manager
FROM python:3.11-slim

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV DISPLAY=:0
ENV PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    # GUI dependencies
    python3-tk \
    x11-apps \
    xauth \
    # Terminal emulators
    gnome-terminal \
    xterm \
    # File system utilities
    tree \
    nano \
    vim \
    # Network utilities
    curl \
    wget \
    # Build essentials for potential Python packages
    gcc \
    g++ \
    make \
    # Git for version control
    git \
    # Process management
    supervisor \
    # Clean up
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create application user
RUN useradd -m -u 1000 -s /bin/bash appuser

# Create application directories
RUN mkdir -p /app \
    /config \
    /logs \
    /data/torrents \
    /mnt/user/appdata/cross-pollinator/logs \
    /mnt/user/data/torrents

# Set working directory
WORKDIR /app

# Copy application files
COPY ua_gui_manager.py /app/
COPY requirements.txt /app/
COPY entrypoint.sh /app/
COPY supervisor.conf /etc/supervisor/conf.d/

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Make entrypoint executable
RUN chmod +x /app/entrypoint.sh

# Set ownership
RUN chown -R appuser:appuser /app /config /logs /data

# Create volume mount points
VOLUME ["/config", "/logs", "/data", "/mnt/user/appdata/cross-pollinator/logs", "/mnt/user/data/torrents"]

# Expose any necessary ports (if needed for future web interface)
EXPOSE 8080

# Switch to application user
USER appuser

# Set entrypoint
ENTRYPOINT ["/app/entrypoint.sh"]

# Default command
CMD ["python", "ua_gui_manager.py"]